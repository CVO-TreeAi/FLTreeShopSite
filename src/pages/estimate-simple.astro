---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Get Your Free Estimate - The Tree Shop">
  <main style="background: linear-gradient(135deg, #1e3a8a, #1e40af); min-height: 100vh; padding: 2rem 0;">
    <div style="max-width: 600px; margin: 0 auto; padding: 0 1rem;">
      
      <!-- Simple Header -->
      <div style="text-align: center; margin-bottom: 2rem;">
        <h1 style="font-size: 2.5rem; font-weight: 700; color: white; margin-bottom: 1rem;">
          Get Your Free Estimate
        </h1>
        <p style="font-size: 1.25rem; color: #bfdbfe;">
          Professional forestry mulching and land clearing services in Florida
        </p>
      </div>

      <!-- Simple Contact Form -->
      <div style="background: white; border-radius: 12px; padding: 2rem; box-shadow: 0 12px 24px rgba(0,0,0,0.1);">
        <form id="simple-lead-form">
          
          <div style="margin-bottom: 1.5rem;">
            <label style="display: block; font-weight: 600; color: #374151; margin-bottom: 0.5rem;">
              Your Name *
            </label>
            <input
              type="text"
              id="customer-name"
              required
              style="width: 100%; border: 2px solid #d1d5db; border-radius: 8px; padding: 0.75rem; font-size: 1rem;"
              placeholder="John Smith"
            />
          </div>
          
          <div style="margin-bottom: 1.5rem;">
            <label style="display: block; font-weight: 600; color: #374151; margin-bottom: 0.5rem;">
              Phone Number *
            </label>
            <input
              type="tel"
              id="customer-phone"
              required
              style="width: 100%; border: 2px solid #d1d5db; border-radius: 8px; padding: 0.75rem; font-size: 1rem;"
              placeholder="(555) 123-4567"
            />
          </div>
          
          <div style="margin-bottom: 1.5rem;">
            <label style="display: block; font-weight: 600; color: #374151; margin-bottom: 0.5rem;">
              Email Address *
            </label>
            <input
              type="email"
              id="customer-email"
              required
              style="width: 100%; border: 2px solid #d1d5db; border-radius: 8px; padding: 0.75rem; font-size: 1rem;"
              placeholder="john@email.com"
            />
          </div>
          
          <div style="margin-bottom: 1.5rem;">
            <label style="display: block; font-weight: 600; color: #374151; margin-bottom: 0.5rem;">
              Project Address * 
            </label>
            <input
              type="text"
              id="project-address"
              required
              style="width: 100%; border: 2px solid #2563eb; border-radius: 8px; padding: 0.75rem; font-size: 1rem; position: relative; z-index: 1000;"
              placeholder="Start typing your Florida address..."
            />
            <p style="font-size: 0.875rem; color: #6b7280; margin-top: 0.5rem;">
              Full address of the property to be cleared
            </p>
          </div>
          
          <div style="margin-bottom: 1.5rem;">
            <label style="display: block; font-weight: 600; color: #374151; margin-bottom: 0.5rem;">
              Project Size (Acres)
            </label>
            <input
              type="text"
              id="project-acres"
              style="width: 100%; border: 2px solid #d1d5db; border-radius: 8px; padding: 0.75rem; font-size: 1rem;"
              placeholder="Any size (e.g., 1.12, 3.5, 10)"
            />
          </div>
          
          <button
            type="submit"
            style="width: 100%; background: #2563eb; color: white; font-weight: 700; padding: 1rem 2rem; border-radius: 8px; border: none; font-size: 1.125rem; cursor: pointer; transition: background-color 0.2s;"
            onmouseover="this.style.backgroundColor='#1d4ed8'"
            onmouseout="this.style.backgroundColor='#2563eb'"
          >
            Get My Free Estimate
          </button>
        </form>
        
        <div id="success-message" style="display: none; background: #dcfce7; border: 1px solid #16a34a; border-radius: 8px; padding: 1rem; margin-top: 1rem; text-align: center;">
          <div style="color: #16a34a; font-weight: 600;">‚úÖ Thank you! Your estimate request has been submitted.</div>
          <p style="color: #374151; margin: 0.5rem 0 0 0; font-size: 0.875rem;">
            We'll contact you within 4 hours to provide your pricing.
          </p>
        </div>
      </div>

    </div>
  </main>
</Layout>

<!-- WORKING Google Maps -->
<script>
  window.initSimpleEstimate = function() {
    console.log('üó∫Ô∏è Simple Google Maps loaded');
    
    const addressInput = document.getElementById('project-address');
    const form = document.getElementById('simple-lead-form');
    
    // Address validation function
    const validateAddress = async (address) => {
      // Check for minimum required components
      const hasStreet = /\d+\s+\w+/.test(address);
      const hasCity = /,\s*[A-Za-z\s]+/.test(address);
      const hasState = /,\s*[A-Z]{2}/.test(address);
      
      if (!hasStreet || !hasCity || !hasState) {
        return {
          valid: false,
          error: 'Please enter a complete address including city and state',
          formatted: null
        };
      }
      
      // Use Google Geocoding to validate and format
      if (typeof google !== 'undefined' && google.maps && google.maps.Geocoder) {
        try {
          const geocoder = new google.maps.Geocoder();
          const result = await new Promise((resolve, reject) => {
            geocoder.geocode({ address }, (results, status) => {
              if (status === 'OK') {
                resolve(results);
              } else {
                reject(status);
              }
            });
          });
          
          if (result && result[0]) {
            // Check if it's in service area (Florida)
            const isInFlorida = result[0].address_components.some(
              component => component.types.includes('administrative_area_level_1') 
                && component.short_name === 'FL'
            );
            
            if (!isInFlorida) {
              return {
                valid: false,
                error: 'Service area limited to Florida',
                formatted: null
              };
            }
            
            return {
              valid: true,
              error: null,
              formatted: result[0].formatted_address,
              coordinates: {
                lat: result[0].geometry.location.lat(),
                lng: result[0].geometry.location.lng()
              }
            };
          }
        } catch (error) {
          console.error('Geocoding failed:', error);
        }
      }
      
      return {
        valid: false,
        error: 'Unable to validate address. Please check and try again.',
        formatted: null
      };
    };
    
    // Enhanced autocomplete setup
    if (window.google && window.google.maps && window.google.maps.places) {
      const autocomplete = new google.maps.places.Autocomplete(addressInput, {
        types: ['address'],
        componentRestrictions: { country: 'US' },
        fields: ['formatted_address', 'geometry', 'address_components']
      });
      
      // Set bounds to Florida
      const floridaBounds = new google.maps.LatLngBounds(
        new google.maps.LatLng(24.396308, -87.634896), // SW Florida
        new google.maps.LatLng(31.000968, -79.974306)  // NE Florida
      );
      autocomplete.setBounds(floridaBounds);
      
      autocomplete.addListener('place_changed', async function() {
        const place = autocomplete.getPlace();
        
        if (!place.geometry) {
          addressInput.setCustomValidity('Please select a valid address from the dropdown');
          return;
        }
        
        // Validate the selected address
        const validation = await validateAddress(place.formatted_address);
        
        if (!validation.valid) {
          addressInput.setCustomValidity(validation.error);
          console.error('Address validation failed:', validation.error);
        } else {
          addressInput.setCustomValidity(''); // Clear validation
          addressInput.value = validation.formatted; // Use properly formatted address
          console.log('‚úÖ Valid Florida address:', validation.formatted);
        }
      });
      
      console.log('‚úÖ Address autocomplete with validation ready');
    } else {
      console.error('‚ùå Google Places not available');
    }
    
    // Form submission
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const name = document.getElementById('customer-name').value;
      const phone = document.getElementById('customer-phone').value;
      const email = document.getElementById('customer-email').value;
      const address = document.getElementById('project-address').value;
      const acres = document.getElementById('project-acres').value;
      
      if (!name || !phone || !email || !address) {
        alert('Please fill in all required fields');
        return;
      }
      
      // Validate address before submission
      const validation = await validateAddress(address);
      if (!validation.valid) {
        alert(`Address Error: ${validation.error}`);
        return;
      }
      
      console.log('‚úÖ Address validation passed:', validation.formatted);
      
      // Calculate estimate with $1900 minimum
      const acreageNum = parseFloat(acres) || 0;
      const baseEstimate = Math.max(1900, acreageNum * 2500); // $2500/acre, $1900 minimum
      
      // Submit to Terminal
      try {
        const leadData = {
          name: name,
          email: email,
          phone: phone,
          address: address,
          acreage: acres || 'Not specified',
          selectedPackage: acreageNum > 0 ? `${acreageNum} acres - $${baseEstimate.toLocaleString()} estimate` : 'General Inquiry',
          message: `Lead from fltreeshop.com - Project size: ${acres || 'Not specified'} acres - Estimated value: $${baseEstimate.toLocaleString()}`,
          source: 'fltreeshop.com',
          status: 'new',
          createdAt: Date.now(),
          estimatedValue: baseEstimate
        };
        
        console.log('Submitting simple lead:', leadData);
        
        // Show success immediately (non-blocking)
        document.getElementById('success-message').style.display = 'block';
        form.style.display = 'none';
        
        // Terminal sync using exact specification
        fetch('https://earnest-lemming-634.convex.cloud/api/mutation', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            path: 'leads:createLead',
            args: {
              name: leadData.name,
              email: leadData.email,
              phone: leadData.phone,
              source: 'fltreeshop.com',
              status: 'debug-test',
              createdAt: Date.now()
            }
          })
        }).then(r => {
          console.log('Terminal response status:', r.status);
          return r.text();
        }).then(text => {
          console.log('Terminal response:', text);
          if (text && !text.includes('error')) {
            console.log('‚úÖ Lead successfully synced to Terminal');
          } else {
            console.log('‚ö†Ô∏è Terminal sync issue:', text);
          }
        }).catch(error => {
          console.log('‚ö†Ô∏è Terminal connection error:', error);
        });
        
      } catch (error) {
        console.error('Form error:', error);
        alert('Error submitting form. Please call us at 386.843.5266');
      }
    });
  };
</script>

<!-- Simple Google Maps Load -->
<script async defer 
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCfpqXu-EQV5MWIFBodDFB1K3VZtz1kF5A&libraries=places&callback=initSimpleEstimate">
</script>

<style>
  /* Override Google autocomplete styling */
  .pac-container {
    z-index: 10000 !important;
    border-radius: 8px !important;
    margin-top: 2px !important;
    font-family: inherit !important;
  }
  
  .pac-item {
    padding: 12px !important;
    font-size: 14px !important;
    border-bottom: 1px solid #f3f4f6 !important;
  }
  
  .pac-item:hover {
    background-color: #eff6ff !important;
  }
  
  .pac-item-selected {
    background-color: #dbeafe !important;
  }
  
  input:focus {
    border-color: #2563eb !important;
    outline: none !important;
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1) !important;
  }
</style>